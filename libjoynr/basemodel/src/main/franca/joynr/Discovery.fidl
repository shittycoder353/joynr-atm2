/*
 * #%L
 * %%
 * Copyright (C) 2011 - 2017 BMW Car IT GmbH
 * %%
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * #L%
 */
package system

import types.* from "DiscoveryTypes.fidl"

<**
	@description: The <code>Discovery</code> interface is a joynr internal
		interface. This interface is used by libjoynr to add, lookup or
		remove provider to joynr discovery. Internally joynr discovery
		consists of a centralized discovery directory
		(<code>GlobalCapabilitiesDirectory</code>) that is distributed to
		all cluster controller (<code>LocalCapabilitiesDirectory</code>).
**>
interface Discovery {

	version {major 0 minor 1}

	<** @description: Adds a provider to the joynr discovery. **>
	method add {
		in {
			<** @description: the new DiscoveryEntry to be added **>
			DiscoveryEntry discoveryEntry
		}
	}

	<**
		@description: Looks up a providers in the joynr discovery that match
			the requested QoS.
		@param: qos [not implemented yet] the minimum QoS the provider must offer
	**>
	method lookup {
		in {
			<** @description: the domain to search for provider **>
			String[] domains
			<** @description: the interface the provider must implement **>
			String interfaceName
			<** @description: the QoS used for the lookup **>
			DiscoveryQos discoveryQos
		}
		out {
			<** @description: a list of matching providers **>
			DiscoveryEntryWithMetaInfo[] result
		}
	}

	<** @description: Looks up a specific provider in the joynr discovery. **>
	method lookup {
		in {
			<** @description: the participant ID of the provider to look up **>
			String participantId
		}
		out {
			<** @description: the provider matching the participant ID **>
			DiscoveryEntryWithMetaInfo result
		}
	}

	<** @description: Removes a provider from joynr discovery. **>
	method remove {
		in {
			<** @description: the participant ID of the provider to remove **>
			String participantId
		}
	}
}
