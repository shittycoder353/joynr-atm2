<!--
  #%L
  %%
  Copyright (C) 2011 - 2017 BMW Car IT GmbH
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
#L%
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>io.joynr.examples</groupId>
    <artifactId>radio-app</artifactId>
    <packaging>jar</packaging>
    <name>${project.groupId}:${project.artifactId}</name>
    <version>1.0</version>

    <properties>
        <joynr.version>0.29.2</joynr.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <license.useLicensesConfigFile>true</license.useLicensesConfigFile>
    </properties>

    <dependencies>
        <!-- Core joynr framework -->
        <dependency>
            <groupId>io.joynr.joynr-core-lib</groupId>
            <artifactId>joynr-core-lib</artifactId>
            <version>${joynr.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <classifier>no_aop</classifier>
            <version>3.0</version>
        </dependency>
        <!-- Logging used in the demo app -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.6.6</version>
        </dependency>

        <!-- Console I/O framework used in the demo app -->
        <dependency>
            <groupId>jline</groupId>
            <artifactId>jline</artifactId>
            <version>2.12</version>
        </dependency>

        <!-- Command line parsing used in the demo app -->
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>1.4</version>
        </dependency>
    </dependencies>

    <build>
        <!--
                If a local subdirectory is used to store Franca files,
                it should be specified here as a resource
        -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/model</directory>
            </resource>
        </resources>

        <finalName>${project.artifactId}</finalName>

        <plugins>
            <!-- The following section makes sure that Java 7
            is used since joynr framework requires it -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                    <testSource>1.7</testSource>
                    <testTarget>1.7</testTarget>
                    <debug>true</debug>
                    <debuglevel>lines,vars,source</debuglevel>
                </configuration>
                <!-- The following plugin is only needed for Eclipse -->
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.plexus</groupId>
                        <artifactId>plexus-compiler-eclipse</artifactId>
                        <version>1.8.6</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <excludes>
                        <exclude>**/package-info*</exclude> <!-- to prevent package-info files from different projects to collide -->
                        <exclude>**/CheckForNull*</exclude> <!-- to prevent check-for-null annotations from package-info to be pulled
							into jar-files -->
                    </excludes>
                </configuration>
            </plugin>

            <!-- Add the generated Java and Franca files to the processing of sources -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/main/generated-java</source>
                                <source>src/main/model</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--
              Call the joynr framework code generator to
              create the required API files from the Franca input files.
              The input files can be specified either by relative path to file,
              relative path to directory they reside in, or using a
              dependency artifact that contains them.
              For further details please refer to the external documentation.
            -->
            <plugin>
                <groupId>io.joynr.tools.generator</groupId>
                <artifactId>joynr-generator-maven-plugin</artifactId>
                <version>${joynr.version}</version>
                <executions>
                    <!-- The following part is only required for target language Java -->
                    <execution>
                        <id>generate-java</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <model>${basedir}/src/main/model</model>
                            <generationLanguage>java</generationLanguage>
                            <outputPath>${basedir}/src/main/generated-java</outputPath>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <!-- The following part is only required for target language Java -->
                    <dependency>
                        <groupId>io.joynr.tools.generator</groupId>
                        <artifactId>java-generator</artifactId>
                        <version>${joynr.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- clean up should remove any generated code as well -->
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <filesets>
                        <!-- The following part is only required for target language Java -->
                        <fileset>
                            <directory>src/main/generated-java</directory>
                            <includes>
                                <include>**</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            
            <plugin>
                <groupId>com.github.marschall</groupId>
                <artifactId>jdeps-maven-plugin</artifactId>
                <version>0.4.0</version>
                <configuration>
                    <profile>true</profile>
                    <recursive>true</recursive>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
